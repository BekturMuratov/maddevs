// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PhaseFixingDatabaseOutages component should render correctly 1`] = `
<div>
  <section
    class="container_regular"
  >
    <h2
      class="case_title_h2 m-24_bottom"
    >
      
    Phase 1: Fixing database outages
  
    </h2>
     
    <div
      class="case_cards-container"
    >
      <div
        class="case_card background-color-silver"
      >
        <p
          class="case_paragraph-uppercase case_card-name m-10_bottom media-m-8_bottom"
        >
          
        Challenge
      
        </p>
         
        <h4
          class="case_title_h4 m-10_bottom media-m-8_bottom"
        >
          
        Regular outage
      
        </h4>
         
        <p
          class="case_paragraph"
        >
          
        Without any detectable load spikes, the database would often reach maximum processor performance and deny service as the queries piled up in the query queue. To get the system up and running again, workers had to be manually restarted every time.
      
        </p>
      </div>
       
      <div
        class="case_card background-color-blue-light"
      >
        <p
          class="case_paragraph-uppercase case_card-name m-10_bottom media-m-8_bottom"
        >
          
        Effect on users
      
        </p>
         
        <h4
          class="case_title_h4 m-10_bottom media-m-8_bottom"
        >
          
        Degraded user services
      
        </h4>
         
        <p
          class="case_paragraph"
        >
          
        Users had limited access to services: they couldn't view contents, place orders, or manage their settings.
      
        </p>
      </div>
    </div>
     
    <div
      class="case_quote-wrap m-48_top m-96_bottom media-m-24_top media-m-72_bottom m-auto"
    >
      <blockquote
        class="case_blockquote-box m-auto"
      >
        
    “We needed better monitoring and metrics collection to detect the true reason for the outage. We don’t sweep these things under the rug. We go for root causes.”
  
      </blockquote>
       
      <p
        class="case_quote-author"
      >
        
    Andrew Sapozhnikov, CIO at Mad Devs
  
      </p>
    </div>
     
    <h3
      class="case_title_h3 m-24_bottom media-m-12_bottom"
    >
      
    Solution
  
    </h3>
     
    <div
      class="case_solution-cards"
    >
      <cardtechsolution-stub
        description="Collecting host metrics (CloudWatch and okmeter showed consequences, not causes)."
        icon="cloud"
      />
      <cardtechsolution-stub
        description="Analyzing the true RAM use and identifying 1,200-1,500 worker connections taking up about 40 GB of RAM."
        icon="danger"
      />
      <cardtechsolution-stub
        description="Adding PgBouncers to reduce the load on the database."
        icon="gear"
      />
      <cardtechsolution-stub
        description="Stabilizing connection pooling by applying ELB and thus distributing traffic more evenly to decrease the number of SPOFs."
        icon="speed"
      />
    </div>
     
    <p
      class="case_paragraph m-48_top m-48_bottom media-m-24_bottom"
    >
      
    As a result, we spent $180 on launching PgBouncers on two c4.large instances behind NLB and saved about 10X  the sum in the customer’s monthly costs by: Freeing up about 40 GB of RAM, Postponing the need to upgrade the RDS instance until about 6 months later.
  
    </p>
     
    <h2
      class="case_title_h2 case_title-result m-48_bottom media-m-41_bottom"
    >
      
    Result
  
    </h2>
     
    <fixingdatabaseoutagesresult-stub
      class="m-96_bottom media-m-48_bottom"
    />
  </section>
</div>
`;
